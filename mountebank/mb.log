{"message":"[mb:2525] Running with --allowInjection set. See http://localhost:2525/docs/security for security info","level":"warn","timestamp":"2020-11-18T06:22:57.895Z"}
{"message":"[mb:2525] mountebank v2.2.1 now taking orders - point your browser to http://localhost:2525/ for help","level":"info","timestamp":"2020-11-18T06:22:57.902Z"}
{"message":"[mb:2525] config: {\"options\":{\"configfile\":\"imposters.ejs\",\"allowInjection\":\"true\",\"loglevel\":\"debug\",\"port\":2525,\"noParse\":false,\"pidfile\":\"mb.pid\",\"nologfile\":false,\"logfile\":\"mb.log\",\"localOnly\":false,\"ipWhitelist\":[\"*\"],\"mock\":false,\"debug\":false,\"heroku\":false,\"protofile\":\"protocols.json\"},\"process\":{\"nodeVersion\":\"v10.19.0\",\"architecture\":\"x64\",\"platform\":\"linux\"}}","level":"debug","timestamp":"2020-11-18T06:22:57.902Z"}
{"message":"[mb:2525] PUT /imposters","level":"info","timestamp":"2020-11-18T06:22:57.918Z"}
{"message":"[mb:2525] ::ffff:127.0.0.1:43136 => {\"imposters\":[{\"port\":4600,\"protocol\":\"http\",\"defaultResponse\":{\"statusCode\":404,\"body\":\"Not Found.\",\"headers\":{}},\"stubs\":[{\"predicate\":[{\"matches\":{\"path\":\"/blazePost\",\"method\":\"POST\"}}],\"responses\":[{\"inject\":\"function inject(request,state){\\nconst responseDirPath = require('path').dirname(__dirname) + '/../../../blaze/';\\nconst v = Math.floor((Math.random() * 10) + 1);\\nconsole.log(JSON.parse(request.body)[0][\\\"type\\\"])\\nconst c = JSON.parse(request.body)[0][\\\"type\\\"]\\nif (v % 11 == 0){\\n    return require(responseDirPath + \\\"blazeFailure.json\\\");\\n}\\nif (c == \\\"decision\\\"){\\n    return require(responseDirPath + \\\"blazeDecisionCalculationResponse.json\\\");\\n}\\nreturn require(responseDirPath + \\\"blazeVariableCalculationResponse.json\\\");\\n}\"}]}]},{\"port\":4601,\"protocol\":\"http\",\"defaultResponse\":{\"statusCode\":404,\"body\":\"Not Found.\",\"headers\":{}},\"stubs\":[{\"predicate\":[{\"matches\":{\"path\":\"/cibilPost\",\"method\":\"POST\"}}],\"responses\":[{\"inject\":\"function inject(request,state){\\nconst responseDirPath = require('path').dirname(__dirname) + '/../../../cibil/';\\nconst v = Math.floor((Math.random() * 10) + 1);\\nconsole.log(JSON.parse(request.body)[0][\\\"FNAME\\\"])\\nconst c = JSON.parse(request.body)[0][\\\"FNAME\\\"]\\nif (v % 3 == 0)\\n{\\nreturn require(responseDirPath + \\\"cibilresponsefailure.json\\\");\\n}\\nif (c == \\\"Shashanka\\\"){\\n    return require(responseDirPath + \\\"cibilResponseOne.json\\\");\\n}\\nreturn require(responseDirPath + \\\"cibilResponseTwo.json\\\");\\n}\"}]}]},{\"port\":4602,\"protocol\":\"http\",\"defaultResponse\":{\"statusCode\":404,\"body\":\"Not Found.\",\"headers\":{}},\"stubs\":[{\"predicate\":[{\"matches\":{\"path\":\"/idmPost\",\"method\":\"POST\"}}],\"responses\":[{\"inject\":\"function inject(request,state){\\nconst responseDirPath = require('path').dirname(__dirname) + '/../../../idm/';\\nconst v = Math.floor((Math.random() * 10) + 1);\\n\\nif (v % 3 == 0){\\n    return require(responseDirPath + \\\"idmFailure.json\\\");\\n}\\n\\n    return require(responseDirPath + \\\"idmResponse.json\\\");\\n}\"}]}]},{\"port\":4603,\"protocol\":\"http\",\"defaultResponse\":{\"statusCode\":404,\"body\":\"Not Found.\",\"headers\":{}},\"stubs\":[{\"predicate\":[{\"matches\":{\"path\":\"/liabilityPost\",\"method\":\"POST\"}}],\"responses\":[{\"inject\":\"function inject(request,state){\\nconst responseDirPath = require('path').dirname(__dirname) + '/../../../liability/';\\n    return require(responseDirPath + \\\"liabilityResponse.json\\\");\\n}\"}]}]}]}","level":"debug","timestamp":"2020-11-18T06:22:57.926Z"}
{"message":"[http:4600] Open for business...","level":"info","timestamp":"2020-11-18T06:22:57.943Z"}
{"message":"[http:4601] Open for business...","level":"info","timestamp":"2020-11-18T06:22:57.944Z"}
{"message":"[http:4602] Open for business...","level":"info","timestamp":"2020-11-18T06:22:57.944Z"}
{"message":"[http:4603] Open for business...","level":"info","timestamp":"2020-11-18T06:22:57.945Z"}
{"message":"[http:4602] ::1:56598 ESTABLISHED","level":"debug","timestamp":"2020-11-18T06:23:22.958Z"}
{"message":"[http:4602] ::1:56600 ESTABLISHED","level":"debug","timestamp":"2020-11-18T06:23:22.959Z"}
{"message":"[http:4602] ::1:56598 LAST-ACK","level":"debug","timestamp":"2020-11-18T06:23:22.960Z"}
{"message":"[http:4602] ::1:56600 => POST /idmPost","level":"info","timestamp":"2020-11-18T06:23:22.962Z"}
{"message":"[http:4602] ::1:56600 => {\"requestFrom\":\"::1:56600\",\"method\":\"POST\",\"path\":\"/idmPost\",\"query\":{},\"headers\":{\"Content-Type\":\"application/json\",\"User-Agent\":\"PostmanRuntime/7.26.8\",\"Accept\":\"*/*\",\"Postman-Token\":\"c12e951f-123c-4b23-83ef-8104ed43a0be\",\"Host\":\"localhost:4602\",\"Accept-Encoding\":\"gzip, deflate, br\",\"Connection\":\"keep-alive\",\"Content-Length\":\"29\"},\"body\":\"[{\\n    \\\"FNAME\\\": \\\"Shashank\\\"\\n}]\",\"ip\":\"::1\"}","level":"debug","timestamp":"2020-11-18T06:23:22.969Z"}
{"message":"[http:4602] using predicate match: {}","level":"debug","timestamp":"2020-11-18T06:23:22.969Z"}
{"message":"[http:4602] generating response from {\"inject\":\"function inject(request,state){\\nconst responseDirPath = require('path').dirname(__dirname) + '/../../../idm/';\\nconst v = Math.floor((Math.random() * 10) + 1);\\n\\nif (v % 3 == 0){\\n    return require(responseDirPath + \\\"idmFailure.json\\\");\\n}\\n\\n    return require(responseDirPath + \\\"idmResponse.json\\\");\\n}\"}","level":"debug","timestamp":"2020-11-18T06:23:22.970Z"}
{"message":"[http:4602] ::1:56600 <= {\"statusCode\":200,\"headers\":{\"Content-Type\":\"application/json\",\"Connection\":\"close\"},\"body\":\"[\\n    {\\n        \\\"status\\\": \\\"Approved\\\",\\n        \\\"idmValueFirst\\\": \\\"256\\\",\\n        \\\"idmValueSecond\\\": \\\"381\\\"\\n    }\\n]\",\"_mode\":\"text\"}","level":"debug","timestamp":"2020-11-18T06:23:22.973Z"}
{"message":"[http:4602] ::1:56598 CLOSED","level":"debug","timestamp":"2020-11-18T06:23:22.975Z"}
{"message":"[http:4602] ::1:56600 CLOSED","level":"debug","timestamp":"2020-11-18T06:23:22.975Z"}
{"message":"[http:4600] ::1:51404 ESTABLISHED","level":"debug","timestamp":"2020-11-18T06:23:38.501Z"}
{"message":"[http:4600] ::1:51406 ESTABLISHED","level":"debug","timestamp":"2020-11-18T06:23:38.501Z"}
{"message":"[http:4600] ::1:51404 LAST-ACK","level":"debug","timestamp":"2020-11-18T06:23:38.502Z"}
{"message":"[http:4600] ::1:51406 => POST /blazePost","level":"info","timestamp":"2020-11-18T06:23:38.502Z"}
{"message":"[http:4600] ::1:51406 => {\"requestFrom\":\"::1:51406\",\"method\":\"POST\",\"path\":\"/blazePost\",\"query\":{},\"headers\":{\"Content-Type\":\"application/json\",\"User-Agent\":\"PostmanRuntime/7.26.8\",\"Accept\":\"*/*\",\"Postman-Token\":\"4ed41385-ac6a-4075-b1df-f2c94e414185\",\"Host\":\"localhost:4600\",\"Accept-Encoding\":\"gzip, deflate, br\",\"Connection\":\"keep-alive\",\"Content-Length\":\"10\"},\"body\":\"[{\\n    \\n}]\",\"ip\":\"::1\"}","level":"debug","timestamp":"2020-11-18T06:23:38.502Z"}
{"message":"[http:4600] using predicate match: {}","level":"debug","timestamp":"2020-11-18T06:23:38.503Z"}
{"message":"[http:4600] generating response from {\"inject\":\"function inject(request,state){\\nconst responseDirPath = require('path').dirname(__dirname) + '/../../../blaze/';\\nconst v = Math.floor((Math.random() * 10) + 1);\\nconsole.log(JSON.parse(request.body)[0][\\\"type\\\"])\\nconst c = JSON.parse(request.body)[0][\\\"type\\\"]\\nif (v % 11 == 0){\\n    return require(responseDirPath + \\\"blazeFailure.json\\\");\\n}\\nif (c == \\\"decision\\\"){\\n    return require(responseDirPath + \\\"blazeDecisionCalculationResponse.json\\\");\\n}\\nreturn require(responseDirPath + \\\"blazeVariableCalculationResponse.json\\\");\\n}\"}","level":"debug","timestamp":"2020-11-18T06:23:38.503Z"}
{"message":"[http:4600] ::1:51406 <= {\"statusCode\":200,\"headers\":{\"Content-Type\":\"application/json\",\"Connection\":\"close\"},\"body\":\"[\\n    {\\n        \\\"id\\\": \\\"Joe\\\",\\n        \\\"variableOne\\\": 25,\\n        \\\"variableTwo\\\": 100\\n    }\\n]\",\"_mode\":\"text\"}","level":"debug","timestamp":"2020-11-18T06:23:38.505Z"}
{"message":"[http:4600] ::1:51404 CLOSED","level":"debug","timestamp":"2020-11-18T06:23:38.506Z"}
{"message":"[http:4600] ::1:51406 CLOSED","level":"debug","timestamp":"2020-11-18T06:23:38.506Z"}
{"message":"[http:4600] ::1:51410 ESTABLISHED","level":"debug","timestamp":"2020-11-18T06:23:54.054Z"}
{"message":"[http:4600] ::1:51412 ESTABLISHED","level":"debug","timestamp":"2020-11-18T06:23:54.054Z"}
{"message":"[http:4600] ::1:51410 LAST-ACK","level":"debug","timestamp":"2020-11-18T06:23:54.055Z"}
{"message":"[http:4600] ::1:51412 => POST /blazePost","level":"info","timestamp":"2020-11-18T06:23:54.055Z"}
{"message":"[http:4600] ::1:51412 => {\"requestFrom\":\"::1:51412\",\"method\":\"POST\",\"path\":\"/blazePost\",\"query\":{},\"headers\":{\"Content-Type\":\"application/json\",\"User-Agent\":\"PostmanRuntime/7.26.8\",\"Accept\":\"*/*\",\"Postman-Token\":\"95876242-3765-416b-a638-65aaed8c4fd1\",\"Host\":\"localhost:4600\",\"Accept-Encoding\":\"gzip, deflate, br\",\"Connection\":\"keep-alive\",\"Content-Length\":\"28\"},\"body\":\"[{\\n    \\\"type\\\": \\\"decision\\\"\\n}]\",\"ip\":\"::1\"}","level":"debug","timestamp":"2020-11-18T06:23:54.056Z"}
{"message":"[http:4600] using predicate match: {}","level":"debug","timestamp":"2020-11-18T06:23:54.056Z"}
{"message":"[http:4600] generating response from {\"inject\":\"function inject(request,state){\\nconst responseDirPath = require('path').dirname(__dirname) + '/../../../blaze/';\\nconst v = Math.floor((Math.random() * 10) + 1);\\nconsole.log(JSON.parse(request.body)[0][\\\"type\\\"])\\nconst c = JSON.parse(request.body)[0][\\\"type\\\"]\\nif (v % 11 == 0){\\n    return require(responseDirPath + \\\"blazeFailure.json\\\");\\n}\\nif (c == \\\"decision\\\"){\\n    return require(responseDirPath + \\\"blazeDecisionCalculationResponse.json\\\");\\n}\\nreturn require(responseDirPath + \\\"blazeVariableCalculationResponse.json\\\");\\n}\"}","level":"debug","timestamp":"2020-11-18T06:23:54.056Z"}
{"message":"[http:4600] ::1:51412 <= {\"statusCode\":200,\"headers\":{\"Content-Type\":\"application/json\",\"Connection\":\"close\"},\"body\":\"[\\n    {\\n        \\\"status\\\": \\\"Approved\\\"\\n    }\\n]\",\"_mode\":\"text\"}","level":"debug","timestamp":"2020-11-18T06:23:54.057Z"}
{"message":"[http:4600] ::1:51410 CLOSED","level":"debug","timestamp":"2020-11-18T06:23:54.059Z"}
{"message":"[http:4600] ::1:51412 CLOSED","level":"debug","timestamp":"2020-11-18T06:23:54.059Z"}
{"message":"[http:4601] ::1:42522 ESTABLISHED","level":"debug","timestamp":"2020-11-18T06:24:16.784Z"}
{"message":"[http:4601] ::1:42524 ESTABLISHED","level":"debug","timestamp":"2020-11-18T06:24:16.784Z"}
{"message":"[http:4601] ::1:42522 LAST-ACK","level":"debug","timestamp":"2020-11-18T06:24:16.785Z"}
{"message":"[http:4601] ::1:42524 => POST /cibilPost","level":"info","timestamp":"2020-11-18T06:24:16.785Z"}
{"message":"[http:4601] ::1:42524 => {\"requestFrom\":\"::1:42524\",\"method\":\"POST\",\"path\":\"/cibilPost\",\"query\":{},\"headers\":{\"Content-Type\":\"application/json\",\"User-Agent\":\"PostmanRuntime/7.26.8\",\"Accept\":\"*/*\",\"Postman-Token\":\"e26533a4-21fb-4432-8cb7-61519686ab0a\",\"Host\":\"localhost:4601\",\"Accept-Encoding\":\"gzip, deflate, br\",\"Connection\":\"keep-alive\",\"Content-Length\":\"29\"},\"body\":\"[{\\n    \\\"FNAME\\\": \\\"Shashank\\\"\\n}]\",\"ip\":\"::1\"}","level":"debug","timestamp":"2020-11-18T06:24:16.786Z"}
{"message":"[http:4601] using predicate match: {}","level":"debug","timestamp":"2020-11-18T06:24:16.787Z"}
{"message":"[http:4601] generating response from {\"inject\":\"function inject(request,state){\\nconst responseDirPath = require('path').dirname(__dirname) + '/../../../cibil/';\\nconst v = Math.floor((Math.random() * 10) + 1);\\nconsole.log(JSON.parse(request.body)[0][\\\"FNAME\\\"])\\nconst c = JSON.parse(request.body)[0][\\\"FNAME\\\"]\\nif (v % 3 == 0)\\n{\\nreturn require(responseDirPath + \\\"cibilresponsefailure.json\\\");\\n}\\nif (c == \\\"Shashanka\\\"){\\n    return require(responseDirPath + \\\"cibilResponseOne.json\\\");\\n}\\nreturn require(responseDirPath + \\\"cibilResponseTwo.json\\\");\\n}\"}","level":"debug","timestamp":"2020-11-18T06:24:16.787Z"}
{"message":"[http:4601] ::1:42524 <= {\"statusCode\":200,\"headers\":{\"Content-Type\":\"application/json\",\"Connection\":\"close\"},\"body\":\"[\\n    {\\n        \\\"status\\\": \\\"Deactivated\\\",\\n        \\\"cibilValueFirst\\\": \\\"0\\\",\\n        \\\"cibilValueSecond\\\": \\\"0\\\"\\n    }\\n]\",\"_mode\":\"text\"}","level":"debug","timestamp":"2020-11-18T06:24:16.789Z"}
{"message":"[http:4601] ::1:42522 CLOSED","level":"debug","timestamp":"2020-11-18T06:24:16.790Z"}
{"message":"[http:4601] ::1:42524 CLOSED","level":"debug","timestamp":"2020-11-18T06:24:16.790Z"}
{"message":"[http:4601] ::1:42526 ESTABLISHED","level":"debug","timestamp":"2020-11-18T06:24:21.958Z"}
{"message":"[http:4601] ::1:42528 ESTABLISHED","level":"debug","timestamp":"2020-11-18T06:24:21.958Z"}
{"message":"[http:4601] ::1:42526 LAST-ACK","level":"debug","timestamp":"2020-11-18T06:24:21.959Z"}
{"message":"[http:4601] ::1:42528 => POST /cibilPost","level":"info","timestamp":"2020-11-18T06:24:21.960Z"}
{"message":"[http:4601] ::1:42528 => {\"requestFrom\":\"::1:42528\",\"method\":\"POST\",\"path\":\"/cibilPost\",\"query\":{},\"headers\":{\"Content-Type\":\"application/json\",\"User-Agent\":\"PostmanRuntime/7.26.8\",\"Accept\":\"*/*\",\"Postman-Token\":\"52f9771f-97c9-4e03-8cc7-3b4d60c1dd7e\",\"Host\":\"localhost:4601\",\"Accept-Encoding\":\"gzip, deflate, br\",\"Connection\":\"keep-alive\",\"Content-Length\":\"30\"},\"body\":\"[{\\n    \\\"FNAME\\\": \\\"Shashanka\\\"\\n}]\",\"ip\":\"::1\"}","level":"debug","timestamp":"2020-11-18T06:24:21.961Z"}
{"message":"[http:4601] using predicate match: {}","level":"debug","timestamp":"2020-11-18T06:24:21.961Z"}
{"message":"[http:4601] generating response from {\"inject\":\"function inject(request,state){\\nconst responseDirPath = require('path').dirname(__dirname) + '/../../../cibil/';\\nconst v = Math.floor((Math.random() * 10) + 1);\\nconsole.log(JSON.parse(request.body)[0][\\\"FNAME\\\"])\\nconst c = JSON.parse(request.body)[0][\\\"FNAME\\\"]\\nif (v % 3 == 0)\\n{\\nreturn require(responseDirPath + \\\"cibilresponsefailure.json\\\");\\n}\\nif (c == \\\"Shashanka\\\"){\\n    return require(responseDirPath + \\\"cibilResponseOne.json\\\");\\n}\\nreturn require(responseDirPath + \\\"cibilResponseTwo.json\\\");\\n}\"}","level":"debug","timestamp":"2020-11-18T06:24:21.961Z"}
{"message":"[http:4601] ::1:42528 <= {\"statusCode\":404,\"headers\":{\"Content-Type\":\"application/json\",\"Connection\":\"close\"},\"body\":\"[\\n    {\\n        \\\"response\\\": \\\"404 error found, Looks like something went wrong here\\\"\\n    }\\n]\",\"_mode\":\"text\"}","level":"debug","timestamp":"2020-11-18T06:24:21.963Z"}
{"message":"[http:4601] ::1:42526 CLOSED","level":"debug","timestamp":"2020-11-18T06:24:21.964Z"}
{"message":"[http:4601] ::1:42528 CLOSED","level":"debug","timestamp":"2020-11-18T06:24:21.965Z"}
{"message":"[http:4601] ::1:42530 ESTABLISHED","level":"debug","timestamp":"2020-11-18T06:24:26.033Z"}
{"message":"[http:4601] ::1:42532 ESTABLISHED","level":"debug","timestamp":"2020-11-18T06:24:26.034Z"}
{"message":"[http:4601] ::1:42530 LAST-ACK","level":"debug","timestamp":"2020-11-18T06:24:26.035Z"}
{"message":"[http:4601] ::1:42532 => POST /cibilPost","level":"info","timestamp":"2020-11-18T06:24:26.036Z"}
{"message":"[http:4601] ::1:42532 => {\"requestFrom\":\"::1:42532\",\"method\":\"POST\",\"path\":\"/cibilPost\",\"query\":{},\"headers\":{\"Content-Type\":\"application/json\",\"User-Agent\":\"PostmanRuntime/7.26.8\",\"Accept\":\"*/*\",\"Postman-Token\":\"7fe164c7-0b33-49fe-8504-ab5941354344\",\"Host\":\"localhost:4601\",\"Accept-Encoding\":\"gzip, deflate, br\",\"Connection\":\"keep-alive\",\"Content-Length\":\"30\"},\"body\":\"[{\\n    \\\"FNAME\\\": \\\"Shashanka\\\"\\n}]\",\"ip\":\"::1\"}","level":"debug","timestamp":"2020-11-18T06:24:26.037Z"}
{"message":"[http:4601] using predicate match: {}","level":"debug","timestamp":"2020-11-18T06:24:26.037Z"}
{"message":"[http:4601] generating response from {\"inject\":\"function inject(request,state){\\nconst responseDirPath = require('path').dirname(__dirname) + '/../../../cibil/';\\nconst v = Math.floor((Math.random() * 10) + 1);\\nconsole.log(JSON.parse(request.body)[0][\\\"FNAME\\\"])\\nconst c = JSON.parse(request.body)[0][\\\"FNAME\\\"]\\nif (v % 3 == 0)\\n{\\nreturn require(responseDirPath + \\\"cibilresponsefailure.json\\\");\\n}\\nif (c == \\\"Shashanka\\\"){\\n    return require(responseDirPath + \\\"cibilResponseOne.json\\\");\\n}\\nreturn require(responseDirPath + \\\"cibilResponseTwo.json\\\");\\n}\"}","level":"debug","timestamp":"2020-11-18T06:24:26.037Z"}
{"message":"[http:4601] ::1:42532 <= {\"statusCode\":200,\"headers\":{\"Content-Type\":\"application/json\",\"Connection\":\"close\"},\"body\":\"[\\n    {\\n        \\\"status\\\": \\\"Active\\\",\\n        \\\"cibilValueFirst\\\": \\\"30987\\\",\\n        \\\"cibilValueSecond\\\": \\\"111\\\"\\n    }\\n]\",\"_mode\":\"text\"}","level":"debug","timestamp":"2020-11-18T06:24:26.039Z"}
{"message":"[http:4601] ::1:42530 CLOSED","level":"debug","timestamp":"2020-11-18T06:24:26.041Z"}
{"message":"[http:4601] ::1:42532 CLOSED","level":"debug","timestamp":"2020-11-18T06:24:26.042Z"}
{"message":"[mb:2525] Adios - see you soon?","level":"info","timestamp":"2020-11-18T06:24:40.871Z"}
